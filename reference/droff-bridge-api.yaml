openapi: 3.1.0
x-stoplight:
  id: emz6g9komh9o6
info:
  title: Droff Bridge API
  version: '1.0'
  summary: Droff APIs for third parties
  description: ''
  contact:
    email: info@drofflogistics@gmail.com
servers:
  - description: test
    url: 'https://api-dev.drofflogistics.com'
  - description: production
    url: 'https://api-test.drofflogistics.com'
paths:
  /v1/deliveries:
    parameters: []
    post:
      summary: Book delivery
      operationId: bookDelivery
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: Delivery booked
                    id: 132
                properties:
                  message:
                    type: string
                  id:
                    type: string
              examples:
                Example 1:
                  value:
                    message: Delivery booked
                    id: FGGHJHJKKJ
      description: Book new delivery
      tags:
        - Delivery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryRequest'
  '/v1/deliveries/{id}/status':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      summary: ''
      operationId: updateDeliveryStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  deliveryId:
                    type: string
                  status:
                    type: string
                x-examples:
                  Example 1:
                    message: Delivery status updated
                    deliveryId: 01HMVT6HPRBN27J461VGJ9R08P
                    status: PENDING
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/DeliveryStatusEnum'
                  x-stoplight:
                    id: k9fzgc7p5o98y
      tags:
        - Delivery
  '/v1/deliveries/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      operationId: fetchDelivery
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
      description: Fetch delivery details
components:
  schemas:
    DeliveryRequest:
      type: object
      x-stoplight:
        id: 092b2adc4bcd0
      x-examples:
        Example 1:
          item: string
          pickupLocation: string
          dropoffLocation: string
          dropoffPhoneNumber: string
          clientCash: 0
          additionalInfo: string
          payer: CUSTOMER
      examples: []
      title: DeliveryRequest
      description: Request body for book a new delivery
      properties:
        item:
          type: string
        pickupLocation:
          type: string
        pickupPhoneNumber:
          type: string
          x-stoplight:
            id: si5k6np9alpoy
        dropoffLocation:
          type: string
        dropoffPhoneNumber:
          type: string
        clientCash:
          type: integer
        additionalInfo:
          type: string
        payer:
          $ref: '#/components/schemas/PayerEnum'
      required:
        - item
        - pickupLocation
        - pickupPhoneNumber
        - dropoffLocation
        - pickupPhoneNumber
        - dropoffPhoneNumber
        - clientCash
        - payer
    Delivery:
      type: object
      x-stoplight:
        id: zsqknmescy3rh
      x-examples:
        Example 1:
          item: string
          pickupLocation: string
          dropoffLocation: string
          dropoffPhoneNumber: string
          clientCash: 0
          additionalInfo: string
          payer: CUSTOMER
      examples: []
      title: Delivery
      description: Delivery details
      properties:
        item:
          type: string
        pickupLocation:
          type: string
        pickupPhoneNumber:
          type: string
          x-stoplight:
            id: si5k6np9alpoy
        dropoffLocation:
          type: string
        dropoffPhoneNumber:
          type: string
        clientCash:
          type: integer
        additionalInfo:
          type: string
        payer:
          $ref: '#/components/schemas/PayerEnum'
      required:
        - item
        - pickupLocation
        - pickupPhoneNumber
        - dropoffLocation
        - pickupPhoneNumber
        - dropoffPhoneNumber
        - clientCash
        - payer
    PayerEnum:
      title: PayerEnum
      x-stoplight:
        id: 1iyua2julzi78
      type: string
      enum:
        - CUSTOMER
        - BUSINESS
      description: Delivery payer options
    DeliveryStatusEnum:
      title: DeliveryStatusEnum
      x-stoplight:
        id: sxg2qf0jejvza
      type: string
      description: Delivery status options
      enum:
        - PENDING
        - ACCEPTED
        - REJECTED
        - IN_TRANSIT
        - COMPLETED
        - RESCHEDULED
  securitySchemes: {}
tags:
  - name: Delivery
