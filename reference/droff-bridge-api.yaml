openapi: 3.1.0
x-stoplight:
  id: emz6g9komh9o6
info:
  title: Droff Bridge API
  version: '1.0'
  summary: Droff APIs for third parties
  description: ''
  contact:
    email: info@drofflogistics@gmail.com
servers:
  - description: test
    url: 'https://api-dev.drofflogistics.com'
  - description: production
    url: 'https://api-test.drofflogistics.com'
paths:
  /v1/api-portaldeliveries:
    parameters: []
    post:
      summary: Book delivery
      operationId: bookDelivery
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: Delivery booked
                    id: 132
                properties:
                  message:
                    type: string
                  id:
                    type: string
              examples:
                Example 1:
                  value:
                    message: Delivery booked
                    id: FGGHJHJKKJ
      description: Book new delivery
      tags:
        - Delivery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryRequest'
  '/v1/api-portal/deliveries/{id}/status':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      summary: Update delivery status
      operationId: updateDeliveryStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  deliveryId:
                    type: string
                  status:
                    type: string
                x-examples:
                  Example 1:
                    message: Delivery status updated
                    deliveryId: 01HMVT6HPRBN27J461VGJ9R08P
                    status: PENDING
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/DeliveryStatusEnum'
                  x-stoplight:
                    id: k9fzgc7p5o98y
      tags:
        - Delivery
      description: Update status of delivery
  '/v1/api-portal/deliveries/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Fetch delivery
      operationId: fetchDelivery
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
      description: Fetch delivery details
      tags:
        - Delivery
  /v1/health:
    get:
      summary: Health check
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 9vopxu3tf6pzj
                required:
                  - message
      operationId: helathCheck
      description: ''
  /delivery-webhook:
    post:
      summary: Delivery webhook
      operationId: deliveryWebhook
      responses:
        '200':
          description: OK
      description: |
        To keep you updated on the status of your deleiveries, we send the status to your webhook url that you provide. This request just highlights the request body we send.

        You are required to provide a webhook url we can send updates to. The url should:
        - Should be a POST endpoint
        - Process JSON requests
        - Return a 200 OK immediately so your application can continue processing the data in the background
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryWebhookPayload'
      x-internal: true
      tags:
        - Webhooks
    parameters: []
components:
  schemas:
    DeliveryRequest:
      type: object
      x-stoplight:
        id: 092b2adc4bcd0
      x-examples:
        Example 1:
          item: string
          pickupLocation: string
          dropoffLocation: string
          dropoffPhoneNumber: string
          clientCash: 0
          additionalInfo: string
          payer: CUSTOMER
      examples: []
      title: DeliveryRequest
      description: Request body for book a new delivery
      properties:
        item:
          type: string
        pickupLocation:
          type: string
        pickupPhoneNumber:
          type: string
          x-stoplight:
            id: si5k6np9alpoy
        dropoffLocation:
          type: string
        dropoffPhoneNumber:
          type: string
        clientCash:
          type: integer
        additionalInfo:
          type: string
        payer:
          $ref: '#/components/schemas/PayerEnum'
      required:
        - item
        - pickupLocation
        - pickupPhoneNumber
        - dropoffLocation
        - pickupPhoneNumber
        - dropoffPhoneNumber
        - clientCash
        - payer
    Delivery:
      type: object
      x-stoplight:
        id: zsqknmescy3rh
      x-examples:
        Example 1:
          item: string
          pickupLocation: string
          dropoffLocation: string
          dropoffPhoneNumber: string
          clientCash: 0
          additionalInfo: string
          payer: CUSTOMER
      examples: []
      title: Delivery
      description: Delivery details
      properties:
        item:
          type: string
        pickupLocation:
          type: string
        pickupPhoneNumber:
          type: string
          x-stoplight:
            id: si5k6np9alpoy
        dropoffLocation:
          type: string
        dropoffPhoneNumber:
          type: string
        clientCash:
          type: integer
        additionalInfo:
          type: string
        payer:
          $ref: '#/components/schemas/PayerEnum'
      required:
        - item
        - pickupLocation
        - pickupPhoneNumber
        - dropoffLocation
        - pickupPhoneNumber
        - dropoffPhoneNumber
        - clientCash
        - payer
    PayerEnum:
      title: PayerEnum
      x-stoplight:
        id: 1iyua2julzi78
      type: string
      enum:
        - CUSTOMER
        - BUSINESS
      description: Delivery payer options
    DeliveryStatusEnum:
      title: DeliveryStatusEnum
      x-stoplight:
        id: sxg2qf0jejvza
      type: string
      description: Delivery status options
      enum:
        - PENDING
        - ACCEPTED
        - REJECTED
        - IN_TRANSIT
        - COMPLETED
        - RESCHEDULED
    DeliveryWebhookPayload:
      title: DeliveryWebhookPayload
      x-stoplight:
        id: emsrf1zbow1tk
      type: object
      properties:
        event:
          $ref: '#/components/schemas/WebhookEventEnum'
          x-stoplight:
            id: 6uzyaeq5kl4ph
        id:
          type: string
        referenceCode:
          type: string
          x-stoplight:
            id: vmw78gjyj6l6r
        status:
          $ref: '#/components/schemas/DeliveryStatusEnum'
          x-stoplight:
            id: vmw78gjyj6l6r
      required:
        - id
        - referenceCode
        - status
      description: Data sent to provided webhook url
    WebhookEventEnum:
      title: WebhookEventEnum
      x-stoplight:
        id: kxar93qemey4k
      type: string
      description: Types of webhook events
      enum:
        - delivery.booked
        - delivery.updated
  securitySchemes:
    x-droff-api-key:
      name: API Key
      type: apiKey
      in: header
tags:
  - name: Delivery
  - name: Webhooks
security:
  - x-droff-api-key: []
